; ESP32 Template - PlatformIO Configuration
; This file provides template configurations for various ESP32 projects
; Copy the relevant sections to your platformio.ini file

; ==============================================================================
; BASE CONFIGURATION - Common settings for all projects
; ==============================================================================
[env:base]
platform = espressif32
framework = arduino
monitor_speed = 115200
upload_speed = 921600

; Core libraries that most projects will need
lib_deps = 
    SPI
    Wire

; Base build flags
build_flags = 
    -D ARDUINO_USB_CDC_ON_BOOT=1
    -D CORE_DEBUG_LEVEL=2

; ==============================================================================
; MINIMAL - Bare minimum configuration
; ==============================================================================
[env:minimal]
extends = env:base
board = esp32dev

; ==============================================================================
; SENSOR NODE - Battery-powered sensor with deep sleep
; ==============================================================================
[env:sensor_node]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=SENSOR_NODE
    -D ENABLE_DEEP_SLEEP=1
    -D SLEEP_INTERVAL=300000      ; 5 minutes
    -D ENABLE_BATTERY_MONITOR=1
    -D BATTERY_PIN=35
    -D ENABLE_WIFI=1
    -D DEBUG_LEVEL=1              ; Minimal debug for battery life

lib_deps = 
    ${env:base.lib_deps}
    adafruit/DHT sensor library
    adafruit/Adafruit Unified Sensor
    bblanchon/ArduinoJson @ ^6.19.4

; ==============================================================================
; WEB SERVER - Always-on device with web interface
; ==============================================================================
[env:web_server]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=WEB_SERVER
    -D ENABLE_WIFI=1
    -D ENABLE_WEB_SERVER=1
    -D ENABLE_OTA=1
    -D ENABLE_MDNS=1
    -D WEB_SERVER_PORT=80
    -D DEVICE_NAME="\"ESP32-Device\""

lib_deps = 
    ${env:base.lib_deps}
    me-no-dev/ESP Async WebServer
    me-no-dev/AsyncTCP
    bblanchon/ArduinoJson @ ^6.19.4

; ==============================================================================
; MQTT CLIENT - IoT device with MQTT connectivity
; ==============================================================================
[env:mqtt_device]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=MQTT_DEVICE
    -D ENABLE_WIFI=1
    -D ENABLE_MQTT=1
    -D MQTT_SERVER="\"broker.hivemq.com\""
    -D MQTT_PORT=1883
    -D MQTT_TOPIC_PREFIX="\"esp32/\""
    -D MQTT_CLIENT_ID="\"esp32-${sysenv.USER}-${sysenv.RANDOM}\""

lib_deps = 
    ${env:base.lib_deps}
    knolleary/PubSubClient
    bblanchon/ArduinoJson @ ^6.19.4

; ==============================================================================
; BLE DEVICE - Bluetooth Low Energy peripheral
; ==============================================================================
[env:ble_device]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=BLE_DEVICE
    -D ENABLE_BLUETOOTH=1
    -D ENABLE_BLE=1
    -D BLE_DEVICE_NAME="\"ESP32-BLE\""
    -D BLE_SERVICE_UUID="\"4fafc201-1fb5-459e-8fcc-c5c9c331914b\""

; ==============================================================================
; DISPLAY DEVICE - With OLED/TFT display
; ==============================================================================
[env:display_device]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=DISPLAY_DEVICE
    -D ENABLE_DISPLAY=1
    -D DISPLAY_TYPE=SSD1306       ; or ILI9341 for TFT
    -D DISPLAY_WIDTH=128
    -D DISPLAY_HEIGHT=64
    -D DISPLAY_I2C_ADDR=0x3C

lib_deps = 
    ${env:base.lib_deps}
    adafruit/Adafruit SSD1306
    adafruit/Adafruit GFX Library

; ==============================================================================
; LORA NODE - Long range communication
; ==============================================================================
[env:lora_node]
extends = env:base
board = heltec_wifi_lora_32_V3

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=LORA_NODE
    -D ENABLE_LORA=1
    -D LORA_FREQUENCY=915E6       ; 915MHz for US
    -D LORA_SPREADING_FACTOR=7
    -D LORA_SIGNAL_BANDWIDTH=125E3
    -D LORA_CODING_RATE_4=5

lib_deps = 
    ${env:base.lib_deps}
    sandeepmistry/LoRa

; ==============================================================================
; DATA LOGGER - SD card logging with RTC
; ==============================================================================
[env:data_logger]
extends = env:base
board = esp32dev

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=DATA_LOGGER
    -D ENABLE_SD_CARD=1
    -D SD_CS_PIN=5
    -D ENABLE_RTC=1
    -D ENABLE_SPIFFS=1
    -D LOG_INTERVAL=1000

lib_deps = 
    ${env:base.lib_deps}
    arduino-libraries/SD
    adafruit/RTClib
    bblanchon/ArduinoJson @ ^6.19.4

; ==============================================================================
; FULL FEATURED - Everything enabled (memory intensive)
; ==============================================================================
[env:full_featured]
extends = env:base
board = esp32-s3-devkitc-1        ; S3 has more memory

build_flags = 
    ${env:base.build_flags}
    -D PROJECT_TYPE=FULL_FEATURED
    -D ENABLE_WIFI=1
    -D ENABLE_BLUETOOTH=1
    -D ENABLE_DISPLAY=1
    -D ENABLE_WEB_SERVER=1
    -D ENABLE_MQTT=1
    -D ENABLE_OTA=1
    -D ENABLE_SD_CARD=1
    -D DEBUG_LEVEL=3

lib_deps = 
    ${env:base.lib_deps}
    adafruit/Adafruit SSD1306
    me-no-dev/ESP Async WebServer
    knolleary/PubSubClient
    bblanchon/ArduinoJson @ ^6.19.4
    arduino-libraries/SD

; ==============================================================================
; CUSTOM BOARD CONFIGURATIONS
; ==============================================================================

; Heltec WiFi LoRa 32 V3
[env:heltec_v3]
extends = env:base
board = heltec_wifi_lora_32_V3
build_flags = 
    ${env:base.build_flags}
    -D HELTEC_BOARD=1
    -D LED_PIN=35
    -D BUTTON_PIN=0
    -D OLED_SDA=17
    -D OLED_SCL=18
    -D OLED_RST=21

; TTGO T-Display
[env:ttgo_t_display]
extends = env:base
board = ttgo-t-display
build_flags = 
    ${env:base.build_flags}
    -D TTGO_BOARD=1
    -D TFT_CS=5
    -D TFT_DC=16
    -D TFT_RST=23
    -D TFT_BL=4

; ESP32-CAM
[env:esp32cam]
extends = env:base
board = esp32cam
build_flags = 
    ${env:base.build_flags}
    -D CAMERA_MODEL_AI_THINKER
    -D ENABLE_CAMERA=1

; ==============================================================================
; DEVELOPMENT & TESTING
; ==============================================================================
[env:dev]
extends = env:base
board = esp32dev
build_type = debug

build_flags = 
    ${env:base.build_flags}
    -D DEVELOPMENT=1
    -D DEBUG_LEVEL=4
    -D ENABLE_SERIAL_DEBUG=1
    -D ENABLE_TELNET_DEBUG=1
    -D DISABLE_WATCHDOG=1
    -O0                           ; No optimization

[env:test]
extends = env:base
board = esp32dev
test_framework = unity

build_flags = 
    ${env:base.build_flags}
    -D UNIT_TEST=1
    -D MOCK_HARDWARE=1

; ==============================================================================
; PRODUCTION
; ==============================================================================
[env:prod]
extends = env:base
board = esp32dev
build_type = release

build_flags = 
    ${env:base.build_flags}
    -D PRODUCTION=1
    -D DEBUG_LEVEL=0
    -D ENABLE_WATCHDOG=1
    -D SECURE_BOOT=1
    -Os                           ; Size optimization

; ==============================================================================
; USAGE INSTRUCTIONS
; ==============================================================================
; 1. Copy this file to platformio.ini
; 2. Choose the environment that matches your project
; 3. Modify board type and build flags as needed
; 4. Add project-specific libraries to lib_deps
; 5. Build with: platformio run -e your_environment