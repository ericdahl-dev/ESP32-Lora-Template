; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = sender

[env]
platform = espressif32
framework = arduino
lib_deps =
	olikraus/U8g2 @ ^2.36.0
	jgromes/RadioLib @ ^6.5.0
monitor_speed = 115200
build_flags =
	-D HELTEC_V3_OLED=1
	-D OLED_SDA=17
	-D OLED_SCL=18
	-D LORA_FREQ_MHZ=915.0
	-D LORA_BW_KHZ=125.0
	-D LORA_SF=9
	-D LORA_CR=5
	-D LORA_TX_DBM=17

[env:sender]
board = heltec_wifi_lora_32_V3
build_flags =
	${env.build_flags}
	-D ROLE_SENDER=1
build_src_filter = +<*> -<examples/>
lib_deps =
	${env.lib_deps}

[env:sender-check]
extends = env:sender
check_tool = cppcheck
check_flags =
    cppcheck: --enable=all --suppress=missingIncludeSystem --suppress=unusedFunction --suppress=unusedVariable --suppress=noExplicitConstructor --suppress=cstyleCast --suppress=missingInclude --suppress=unusedStructMember --suppress=unusedPrivateFunction --suppress=unmatchedSuppression
check_skip_packages = yes
check_src_filters = +<src/> -<.pio/> -<.vscode/>

[env:receiver]
board = heltec_wifi_lora_32_V3
build_flags =
	${env.build_flags}
	-D ROLE_RECEIVER=1
	-D ENABLE_WIFI_OTA=1
build_src_filter = +<*> -<examples/>
lib_deps =
	${env.lib_deps}
	WiFi
	ArduinoOTA
	Update
# Serial upload (default)
upload_port = /dev/tty.usbserial-0001
upload_speed = 921600
# OTA upload (alternative)
; upload_protocol = espota
; upload_flags =
; 	--auth=123456

[env:receiver-check]
extends = env:receiver
check_tool = cppcheck
check_flags =
    cppcheck: --enable=all --suppress=missingIncludeSystem --suppress=unusedFunction --suppress=unusedVariable --suppress=noExplicitConstructor --suppress=cstyleCast --suppress=missingInclude --suppress=unusedStructMember --suppress=unusedPrivateFunction --suppress=unmatchedSuppression
check_skip_packages = yes
check_src_filters = +<src/> -<.pio/> -<.vscode/>

[env:sender-tidy]
extends = env:sender
check_tool = clangtidy
check_flags =
    clangtidy: --config-file=.clang-tidy --header-filter='^src/.*\.(h|hpp)$'
check_skip_packages = yes
check_src_filters = +<src/>

[env:receiver-tidy]
extends = env:receiver
check_tool = clangtidy
check_flags =
    clangtidy: --config-file=.clang-tidy --header-filter='^src/.*\.(h|hpp)$'
check_skip_packages = yes
check_src_filters = +<src/>

[env:native]
platform = native
framework =
lib_deps =
test_build_src = yes
build_flags = -D UNIT_TEST -std=c++17
build_src_filter = +<*> -<examples/> -<main.cpp> -<wifi_manager.cpp>
test_ignore = test_wifi_* test_integration test_app_logic test_error_handler test_modular_architecture test_sensor_framework test_state_machine
